#include <iostream>
#include <fstream>
#include <string>
using namespace std;

//======================================================================================================================================================================
/* 1. Выделить в памяти динамический одномерный массив типа int. Размер массива запросить у пользователя. 
Инициализировать его числами степенями двойки: 1, 2, 4, 8, 16, 32, 64, 128 … Вывести массив на экран. Не забыть освободить память. 
=) Разбить программу на функции.*/
//======================================================================================================================================================================

void InitArr(int* arr, size_t n)
{
    int a = 1;
    for (size_t i = 0; i < n; i++)
    {
        arr[i] = a;
        a *= 2;
        cout << arr[i] << endl;
    }
    return;
}

inline void task1()
{
    int *myarr; 
    int n;
    cout << "Enter size of your array: ";
    cin >> n;

    if (n > 0)
    {
        myarr = new (std::nothrow) int[n];
        if (myarr != NULL)
        {
               
            InitArr(myarr, n);
            delete[] myarr;
            myarr = nullptr;
        }
        else
        {
            cout << "Error! Can not allocate memory!";
        }

    }
        
    return;
}

//======================================================================================================================================================================
/* 2. Динамически выделить матрицу 4х4 типа int. Инициализировать ее псевдослучайными числами через функцию rand. 
Вывести на экран. Разбейте вашу программу на функции которые вызываются из main.*/
//======================================================================================================================================================================

void PrintArr(int** arr, int size)
{
    srand(time(0));
    for (size_t i = 0; i < size; i++)
    {
        for (size_t j = 0; j < size; j++)
        {
            arr[i][j] = rand() % 10;
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
}

inline void task2()
{
    int** myArr;
    int mysize = 4;
    
    if (mysize > 0)
    {
        myArr = new (std::nothrow) int *[mysize];
        if (myArr != NULL)
        {
            for (size_t a = 0; a < mysize; a++)
            {
                myArr[a] = new int[mysize];
            }

            PrintArr(myArr, mysize);

            for (size_t a = 0; a < mysize; a++)
            {
                delete[] myArr[a];
            }
            delete[] myArr;
            myArr = nullptr;
        }
        else
        {
            cout << "Error! Can not allocate memory!";
        }

    }
    return;
}

//======================================================================================================================================================================
/* 3. Написать программу, которая создаст два текстовых файла (*.txt), примерно по 50-100 символов в каждом (особого значения не имеет с каким именно содержимым). 
Имена файлов запросить у польлзователя.*/
//======================================================================================================================================================================

void task3()
{
    string filename1, filename2;
    cout << "Enter name of the first file: ";
    cin >> filename1;
    cout << "Enter name of the second file: ";
    cin >> filename2;

    ofstream myfile(filename1 + ".txt");
    myfile << "some data";
    myfile.close();

    ofstream yourfile(filename2 + ".txt");
    yourfile << "again some data";
    yourfile.close();

    return;
}

//=======================================================================================================================================================================
// 4. Написать функцию, «склеивающую» эти файлы в третий текстовый файл (имя файлов спросить у пользователя).
//=======================================================================================================================================================================

void task4()
{
    string file1, file2, file3;
    cout << "File 1: ";
    cin >> file1;
    cout << "File 2: ";
    cin >> file2;
    cout << "Combined file: ";
    cin >> file3;

        ifstream f1(file1 + ".txt");
        ifstream f2(file2 + ".txt");
        ofstream f3(file3 + ".txt");

        f3 << f1.rdbuf() << f2.rdbuf();

        f1.close();
        f2.close();
        f3.close();

        return;
}

//=======================================================================================================================================================================
/* 5. Написать программу, которая проверяет присутствует ли указанное пользователем при запуске программы слово в указанном пользователем файле 
(для простоты работаем только с латиницей). Используем функцию find которая есть в строках std::string.*/
//=======================================================================================================================================================================

void task5()

{

    string filename, word, line;
    cout << "FIle:";
    cin >> filename;
    cout << "Word:";
    cin >> word;

    ifstream file(filename = ".txt");
    if (file)
    {
        while (getline(file, line))
        {
            if (line.find(word) != string::npos)
            {
                cout << "Yes we found " << word << endl;
            }
            else
            {
                cout << "We can not find " << word << endl;
            }

        }
        file.close();
    }

    return;
}
